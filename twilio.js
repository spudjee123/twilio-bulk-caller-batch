const twilio = require('twilio');
const client = twilio(
  process.env.TWILIO_ACCOUNT_SID,
  process.env.TWILIO_AUTH_TOKEN
);

const callNumber = async (toNumber) => {
  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Ñ‡πà‡∏≤ TWILIO_TWIML_BIN_URL ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
  if (!process.env.TWILIO_TWIML_BIN_URL) {
    throw new Error("TWILIO_TWIML_BIN_URL is not set in environment variables.");
  }

  try {
    const response = await client.calls.create({
      to: toNumber,
      from: process.env.TWILIO_FROM_NUMBER,
      // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏à‡∏≤‡∏Å 'twiml' ‡∏°‡∏≤‡πÉ‡∏ä‡πâ 'url' ‡∏ó‡∏µ‡πà‡∏î‡∏∂‡∏á‡∏°‡∏≤‡∏à‡∏≤‡∏Å Environment Variable
      url: process.env.TWILIO_TWIML_BIN_URL
    });

    console.log("üìû Call initiated using TwiML Bin:", response.sid);
    return response;
  } catch (error) {
    console.error("‚ùå Error making call:", error.message);
    throw error;
  }
};

module.exports = { callNumber };

// const twilio = require('twilio');
// const client = twilio(
//   process.env.TWILIO_ACCOUNT_SID,
//   process.env.TWILIO_AUTH_TOKEN
// );

// const callNumber = async (toNumber) => {
//   const twiml = `
//     <Response>
//       <Say voice="th-TH-Standard-A" language="th-TH">‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡πà‡∏∞</Say>
//       <Pause length="1"/>
//       <Say voice="th-TH-Standard-A" language="th-TH">‡πÇ‡∏õ‡∏£‡πÇ‡∏°‡∏ä‡∏±‡πà‡∏ô‡∏û‡∏¥‡πÄ‡∏®‡∏©‡∏à‡∏≤‡∏Å ‡∏û‡∏µ‡∏à‡∏µ ‡∏î‡πá‡∏≠‡∏Å</Say>
//       <Pause length="1"/>
//       <Say voice="th-TH-Standard-A" language="th-TH">‡∏ù‡∏≤‡∏Å‡πÅ‡∏õ‡∏î‡∏™‡∏¥‡∏ö‡πÅ‡∏õ‡∏î ‡∏£‡∏±‡∏ö‡∏´‡∏ô‡∏∂‡πà‡∏á‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏õ‡∏î‡∏™‡∏¥‡∏ö‡πÅ‡∏õ‡∏î</Say>
//       <Pause length="1"/>
//       <Say voice="th-TH-Standard-A" language="th-TH">‡∏ó‡∏≥‡πÄ‡∏ó‡∏¥‡∏£‡πå‡∏ô‡∏™‡∏µ‡πà‡πÄ‡∏ó‡πà‡∏≤</Say>
//       <Pause length="1"/>
//       <Say voice="th-TH-Standard-A" language="th-TH">‡∏ñ‡∏≠‡∏ô‡πÑ‡∏î‡πâ‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î‡∏´‡∏Å‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏õ‡∏î‡∏™‡∏¥‡∏ö‡πÅ‡∏õ‡∏î‡∏ö‡∏≤‡∏ó</Say>
//       <Pause length="1"/>
//       <Say voice="th-TH-Standard-A" language="th-TH">‡∏≠‡∏¢‡πà‡∏≤‡∏•‡∏∑‡∏°‡∏°‡∏≤‡∏£‡∏±‡∏ö‡πÇ‡∏õ‡∏£‡∏ô‡∏∞‡∏Ñ‡∏∞</Say>
//       <Hangup/>
//     </Response>
//   `;

//   try {
//     const response = await client.calls.create({
//       to: toNumber,
//       from: process.env.TWILIO_FROM_NUMBER,
//       twiml: twiml
//     });

//     console.log("üìû Call initiated:", response.sid);
//     return response;
//   } catch (error) {
//     console.error("‚ùå Error making call:", error.message);
//     throw error;
//   }
// };

// module.exports = { callNumber };